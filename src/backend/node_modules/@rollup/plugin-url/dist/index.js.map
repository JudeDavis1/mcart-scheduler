{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import crypto from 'crypto';\nimport path from 'path';\nimport util from 'util';\nimport fs from 'fs';\n\nimport makeDir from 'make-dir';\nimport mime from 'mime';\nimport { createFilter } from '@rollup/pluginutils';\n\nconst fsStatPromise = util.promisify(fs.stat);\nconst fsReadFilePromise = util.promisify(fs.readFile);\nconst { posix, sep } = path;\nconst defaultInclude = ['**/*.svg', '**/*.png', '**/*.jpg', '**/*.gif'];\n\nexport default function url(options = {}) {\n  const {\n    limit = 14 * 1024,\n    include = defaultInclude,\n    exclude,\n    publicPath = '',\n    emitFiles = true,\n    fileName = '[hash][extname]'\n  } = options;\n  const filter = createFilter(include, exclude);\n\n  const copies = Object.create(null);\n\n  return {\n    name: \"url\",\n    load(id) {\n      if (!filter(id)) {\n        return null;\n      }\n      return Promise.all([fsStatPromise(id), fsReadFilePromise(id)]).then(([stats, buffer]) => {\n        let data;\n        if ((limit && stats.size > limit) || limit === 0) {\n          const hash = crypto\n            .createHash('sha1')\n            .update(buffer)\n            .digest('hex')\n            .substr(0, 16);\n          const ext = path.extname(id);\n          const name = path.basename(id, ext);\n          // Determine the directory name of the file based\n          // on either the relative path provided in options,\n          // or the parent directory\n          const relativeDir = options.sourceDir\n            ? path.relative(options.sourceDir, path.dirname(id))\n            : path\n                .dirname(id)\n                .split(sep)\n                .pop();\n\n          // Generate the output file name based on some string\n          // replacement parameters\n          const outputFileName = fileName\n            .replace(/\\[hash\\]/g, hash)\n            .replace(/\\[extname\\]/g, ext)\n            // use `sep` for windows environments\n            .replace(/\\[dirname\\]/g, relativeDir === '' ? '' : `${relativeDir}${sep}`)\n            .replace(/\\[name\\]/g, name);\n          // Windows fix - exports must be in unix format\n          data = `${publicPath}${outputFileName.split(sep).join(posix.sep)}`;\n          copies[id] = outputFileName;\n        } else {\n          const mimetype = mime.getType(id);\n          const isSVG = mimetype === 'image/svg+xml';\n          data = isSVG ? encodeSVG(buffer) : buffer.toString('base64');\n          const encoding = isSVG ? '' : ';base64';\n          data = `data:${mimetype}${encoding},${data}`;\n        }\n        return `export default \"${data}\"`;\n      });\n    },\n    generateBundle: async function write(outputOptions) {\n      // Allow skipping saving files for server side builds.\n      if (!emitFiles) return;\n\n      const base = options.destDir || outputOptions.dir || path.dirname(outputOptions.file);\n\n      await makeDir(base);\n\n      await Promise.all(\n        Object.keys(copies).map(async (name) => {\n          const output = copies[name];\n          // Create a nested directory if the fileName pattern contains\n          // a directory structure\n          const outputDirectory = path.join(base, path.dirname(output));\n          await makeDir(outputDirectory);\n          return copy(name, path.join(base, output));\n        })\n      );\n    }\n  };\n}\n\nfunction copy(src, dest) {\n  return new Promise((resolve, reject) => {\n    const read = fs.createReadStream(src);\n    read.on('error', reject);\n    const write = fs.createWriteStream(dest);\n    write.on('error', reject);\n    write.on('finish', resolve);\n    read.pipe(write);\n  });\n}\n\n// https://github.com/filamentgroup/directory-encoder/blob/master/lib/svg-uri-encoder.js\nfunction encodeSVG(buffer) {\n  return (\n    encodeURIComponent(\n      buffer\n        .toString('utf-8')\n        // strip newlines and tabs\n        .replace(/[\\n\\r]/gim, '')\n        .replace(/\\t/gim, ' ')\n        // strip comments\n        .replace(/<!--(.*(?=-->))-->/gim, '')\n        // replace\n        .replace(/'/gim, '\\\\i')\n    )\n      // encode brackets\n      .replace(/\\(/g, '%28')\n      .replace(/\\)/g, '%29')\n  );\n}\n"],"names":["fsStatPromise","util","promisify","fs","stat","fsReadFilePromise","readFile","posix","sep","path","defaultInclude","url","options","limit","include","exclude","publicPath","emitFiles","fileName","filter","createFilter","copies","Object","create","name","load","id","Promise","all","then","stats","buffer","data","size","hash","crypto","createHash","update","digest","substr","ext","extname","basename","relativeDir","sourceDir","relative","dirname","split","pop","outputFileName","replace","join","mimetype","mime","getType","isSVG","encodeSVG","toString","encoding","generateBundle","write","outputOptions","base","destDir","dir","file","makeDir","keys","map","output","outputDirectory","copy","src","dest","resolve","reject","read","createReadStream","on","createWriteStream","pipe","encodeURIComponent"],"mappings":"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"}